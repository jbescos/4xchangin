<?xml version="1.0"?>

<project name="changestuffs">

	<loadproperties srcFile="./build.properties" />
	<import file="${sdk.dir}/config/user/ant-macros.xml" />
	<import file="scripts/appEngine.xml" />
	<property name="build.path" value="war/WEB-INF/classes" />
	<property name="extras.path" value=".extras" />
	<property name="python.jar" location="libSystem/pyAntTasks-1.3.3.jar" />
	<property name="junit.test.path" value="junitTests" />

	<path id="project.classpath">
		<pathelement path="${build.path}" />
		<fileset dir="war/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="libSystem">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${sdk.dir}/lib">
			<include name="shared/**/*.jar" />
		</fileset>
	</path>

	<path id="appEngine.sdk.classpath">
		<fileset dir="${sdk.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="project.test.classpath">
		<pathelement path="${build.path}" />
		<fileset dir="libTest">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean">
		<delete dir="${build.path}" failonerror="false" />
		<delete dir="${extras.path}" failonerror="false" />
		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/changestuffs" failonerror="false" />
		<delete dir="war/WEB-INF/deploy" failonerror="false" />
		<delete dir="war/WEB-INF/appengine-generated" failonerror="false" />
		<delete dir="gwt-unitCache" failonerror="false" />
		<delete dir="${junit.test.path}" failonerror="false" />
	</target>

	<target name="compile" depends="clean" description="Compiles Java source and copies other source files to the WAR.">
		<mkdir dir="${build.path}" />
		<copy todir="${build.path}">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac srcdir="src" destdir="${build.path}" classpathref="project.classpath" debug="on" />
	</target>

	<target name="gwt-compile" depends="compile">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<!-- src dir is added to ensure the module.xml file(s) are on the classpath -->
				<pathelement location="src" />
				<pathelement location="${build.path}" />
				<path refid="project.classpath" />
			</classpath>
			<jvmarg value="-Xmx512M" />
			<arg line="-extra ${extras.path} -logLevel INFO -strict" />
			<arg value="com/changestuffs/Changestuffs" />
		</java>
	</target>

	<target name="compile-test" depends="compile, datanucleusenhance" description="Compiles for testing.">
		<copy todir="${build.path}">
			<fileset dir="test">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac destdir="${build.path}" debug="on">
			<src path="src" />
			<src path="test" />
			<classpath>
				<path refid="project.test.classpath" />
				<path refid="project.classpath" />
			</classpath>
		</javac>
	</target>

	<target name="datanucleusenhance" description="Performs JDO enhancement on compiled data classes.">
		<enhance_war war="war">
			<args value="-enhancerName ASM -api JDO -pu MediaToGo" />
		</enhance_war>
	</target>

	<target name="runserver" depends="gwt-compile, datanucleusenhance" description="Starts the development server.">
		<dev_appserver war="war" address="${deploy.address}" />
	</target>

	<target name="runserverDev" depends="gwt-compile, datanucleusenhance" description="Starts the development server.">
		<dev_appserver war="war" address="${deploy.address}">
			<options>
				<arg value="--jvm_flag=-Xdebug" />
				<arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9999" />
			</options>
		</dev_appserver>
	</target>

	<target name="devmode" depends="compile, datanucleusenhance" description="Run development mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<pathelement location="src" />
				<path refid="project.classpath" />
				<path refid="appEngine.sdk.classpath" />
			</classpath>
			<jvmarg value="-Xmx1024m" />
			<jvmarg value="-XX:MaxPermSize=384m" />
			<arg value="-server" />
			<arg value="com.google.appengine.tools.development.gwt.AppEngineLauncher" />
			<arg line="-logLevel INFO" />
			<arg line="-port 8080" />
			<arg value="com.changestuffs.Changestuffs" />
		</java>
	</target>

	<target name="update" depends="gwt-compile, datanucleusenhance" description="Uploads the application to App Engine.">
		<appEngineConfig action="update" />
	</target>

	<target name="update_indexes" description="Uploads just the datastore index configuration to App Engine.">
		<appEngineConfig action="update_indexes" />
	</target>

	<target name="rollback" depends="datanucleusenhance" description="Rolls back an interrupted application update.">
		<appEngineConfig action="rollback" />
	</target>

	<target name="request_logs" description="Downloads log data from App Engine for the application.">
		<appEngineConfig action="request_logs">
			<options>
				<arg value="--num_days=5" />
			</options>
			<args>
				<arg value="logs.txt" />
			</args>
		</appEngineConfig>
	</target>


	<!-- TESTS -->

	<target name="test-all" depends="compile-test">
		<mkdir dir="junitTests" />
		<junit printsummary="yes" haltonfailure="no" fork="true">
			<classpath>
				<path refid="project.test.classpath" />
				<path refid="project.classpath" />
			</classpath>
			<formatter type="plain" />
			<batchtest todir="${junit.test.path}">
				<fileset dir="test">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- Need to have Python 2.7 installed to run this target -->
	<target name="i18n" depends="gwt-compile">
		<taskdef name="py-run" classname="org.pyant.tasks.PythonRunTask" classpath="${python.jar}" />
		<py-run script="scripts/mergelocales.py">
			<arg value="${extras.path}/changestuffs" />
			<arg value="src/com/google/gwt/i18n/client" />
		</py-run>
	</target>

	<target name="copyjars" description="Copies the App Engine JARs to the WAR.">
		<copy todir="war/WEB-INF/lib" flatten="true">
			<fileset dir="${sdk.dir}/lib/user">
				<include name="**/*.jar" />
			</fileset>
		</copy>
	</target>

</project>